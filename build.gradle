// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlinVersion = "1.5.31"

    // https://github.com/JLLeitschuh/ktlint-gradle/releases
    ext.ktlintPluginVersion = "10.0.0"

    // https://github.com/detekt/detekt/releases
    ext.detektVersion = "1.19.0"

    // https://github.com/ben-manes/gradle-versions-plugin
    ext.versionsPluginVersion = "0.29.0"

    // https://developer.android.com/jetpack/androidx/releases/hilt
    ext.hiltVersion = "2.40.5"

    // https://github.com/Kotlin/kotlinx-kover/releases
    ext.koverVersion = "0.4.1"

    ext.jacocoAndroidVersion = "0.2"

    ext.coverallsVersion = "2.12.0"

    repositories {
        google()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "https://jitpack.io"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.1.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktlintPluginVersion"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detektVersion"
        classpath "com.github.ben-manes:gradle-versions-plugin:$versionsPluginVersion"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hiltVersion"
        classpath "org.jetbrains.kotlinx:kover:$koverVersion"
        classpath "com.hiya:jacoco-android:$jacocoAndroidVersion"
        classpath "gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:$coverallsVersion"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply from: "buildscripts/versions.gradle"
apply from: "buildscripts/githooks.gradle"

allprojects {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://jitpack.io"
        }
        maven {
            url("https://packages.jetbrains.team/maven/p/ij/intellij-dependencies")
        }
    }
}

subprojects {
    apply from: "../buildscripts/ktlint.gradle"
    apply from: "../buildscripts/detekt.gradle"
    apply from: "../buildscripts/versionsplugin.gradle"
    apply from: "../buildscripts/kover.gradle"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

afterEvaluate {
    // We install the hook at the first occasion
    tasks['clean'].dependsOn installGitHooks
}
