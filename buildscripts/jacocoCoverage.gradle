configurations.all{
    resolutionStrategy {
        eachDependency { details ->
            if ('org.jacoco' == details.requested.group) {
                details.useVersion "0.8.7"
            }
        }
    }
}

task combinedJacocoTestReport(
        type:JacocoReport,
        dependsOn:["testDebugUnitTest", "createDebugCoverageReport"],
) {
    group = "verification"
    description = "create code coverage report with ui and unit tests"

    def excludes = [
            "**/databinding/**",
    ]

    // generated classes
    classDirectories.from = fileTree(
            dir: "$buildDir/intermediates/classes/debug",
            excludes: excludes
    ) + fileTree(
            dir: "$buildDir/tmp/kotlin-classes/debug",
            excludes: excludes
    )

    // sources
    sourceDirectories.from = [
            android.sourceSets.main.java.srcDirs,
            "src/main/java"
    ]

    // Output and existing data
    // Combine Unit test and Instrumented test reports
    executionData.from = fileTree(dir: "$buildDir", includes: [
            // Unit tests coverage data
            "outputs/unit_test_code_coverage/debugUnitTest/testDebugUnitTest.exec",
            // Instrumented tests coverage data
            "outputs/code_coverage/debugAndroidTest/connected/**/*coverage.ec"
    ])
}