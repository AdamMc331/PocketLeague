CREATE TABLE localEventStage(
    id TEXT NOT NULL,
    eventId TEXT NOT NULL,
    name TEXT NOT NULL,
    region TEXT NOT NULL,
    startDateUTC TEXT,
    endDateUTC TEXT,
    liquipedia TEXT NOT NULL,
    qualifier INTEGER AS Boolean NOT NULL DEFAULT 0,
    lan INTEGER AS Boolean NOT NULL DEFAULT 0,
    PRIMARY KEY (id, eventId),
    FOREIGN KEY (eventId) REFERENCES localEvent(id) ON DELETE CASCADE
);

insertFullEventStage:
INSERT INTO localEventStage(
    id,
    eventId,
    name,
    region,
    startDateUTC,
    endDateUTC,
    liquipedia,
    qualifier,
    lan
)
VALUES ?
ON CONFLICT(id, eventId) DO
UPDATE SET
    name = excluded.name,
    region = excluded.region,
    startDateUTC = excluded.startDateUTC,
    endDateUTC = excluded.endDateUTC,
    liquipedia = excluded.liquipedia,
    qualifier = excluded.qualifier,
    lan = excluded.lan
;

selectAllForEvent:
SELECT *
FROM localEventStage
WHERE eventId = :eventId
ORDER BY startDateUTC;

selectSwissStageResults:
SELECT localTeam.name, SUM(wins) || '-' || SUM(losses)
FROM(
    SELECT blueTeamId AS teamId, SUM(CASE WHEN blueTeamGameWins > orangeTeamGameWins THEN 1 ELSE 0 END) AS wins,  SUM(CASE WHEN blueTeamGameWins < orangeTeamGameWins THEN 1 ELSE 0 END) AS losses
    FROM localMatch
    WHERE eventId = "632ef4e7da9d7ca1c7bb467c" AND stageId = "0"
    GROUP BY blueTeamId
    UNION ALL
    SELECT orangeTeamId AS teamId, SUM(CASE WHEN orangeTeamGameWins > blueTeamGameWins THEN 1 ELSE 0 END) AS wins,  SUM(CASE WHEN orangeTeamGameWins < blueTeamGameWins THEN 1 ELSE 0 END) AS losses
    FROM localMatch
    WHERE eventId = "632ef4e7da9d7ca1c7bb467c" AND stageId = "0"
    GROUP BY orangeTeamId
)
INNER JOIN localTeam ON localTeam.id = teamId
GROUP BY localTeam.name;
